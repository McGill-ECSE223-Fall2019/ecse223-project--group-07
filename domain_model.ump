class Wall
{
  Integer  id;
  1 -- 0..1 WallMove;

}

class Player
{
  
  
  Integer thinkingTime;
Integer id;
* -> 0..10 Wall usedWall;

  1 owner -- 0..10 Wall unusedWall;

  }

class Game
{
 
  int id;
1 -- 2 Player;

    1 <@>- 1 GameState;
}

class Move
{
    0..1 previousMove -- 0..1 Move nextMove;
   
  
  * pawnMoves -- 1 Player;
  0..1 currentMove <- * Player;
}

class Cell
{
  Integer row;
Integer column;
1 <- * Move;
    1 currentCell -- 0..1 Player occupant;

}

class WallMove
{
  isA Move;
  enum Orientation {Vertical, Horizontal}
}

class PawnMove
{
  isA Move;
}

class PawnJump
{
  isA Move;
}
class Board
{
  1 <@>- 81 Cell;
    1 -- 1 Game;
}

class GameState
{
      * -> 1 Player turn;
}

class System
{
  1 <@>- * User;
  1 <@>-* Game;
}

class User
{
  username;
1 -- 0..2 Player;
}